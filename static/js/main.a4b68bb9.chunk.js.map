{"version":3,"sources":["components/Register.jsx","components/Login.jsx","comments/CommentForm.js","comments/Comment.js","api.js","comments/Comments.js","App.js","index.js"],"names":["Register","setShowRegister","useState","success","setSuccess","error","setError","usernameRef","useRef","emailRef","passwordRef","handleSubmit","e","a","preventDefault","newUser","username","current","value","email","password","axios","post","className","Room","onSubmit","autoFocus","placeholder","ref","type","min","Cancel","onClick","Login","setShowLogin","setCurrentUsername","myStorage","user","res","data","setItem","CommentForm","submitLabel","hasCancelButton","handleCancel","initialText","text","setText","isTextareaDisabled","length","event","onChange","target","disabled","Comment","comment","replies","setActiveComment","activeComment","updateComment","deleteComment","addComment","parentId","currentUserId","isEditing","id","isReplying","timePassed","Date","createdAt","canDelete","userId","replyId","toLocaleDateString","body","map","reply","getComments","createComment","Math","random","toString","substr","toISOString","Comments","commentsUrl","backendComments","setBackendComments","rootComments","filter","backendComment","createCommentApi","then","commentId","updateCommentApi","updatedBackendComments","deleteCommentApi","useEffect","getCommentsApi","rootComment","sort","b","getTime","App","window","localStorage","getItem","currentUsername","pins","setPins","currentPlaceId","setCurrentPlaceId","newPlace","setNewPlace","title","setTitle","desc","setDesc","star","setStar","visitDate","setVisitDate","latitude","longitude","zoom","viewport","setViewport","showRegister","showLogin","newPin","rating","lat","long","console","log","getPins","get","allPins","mapRef","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","style","height","width","mapboxApiAccessToken","process","mapStyle","onViewportChange","onDblClick","lngLat","p","offsetLeft","offsetTop","fontSize","color","cursor","_id","closeButton","closeOnClick","onClose","anchor","Array","fill","Star","slice","format","Delete","marginBottom","visibility","fetch","method","result","position","backgroundColor","ExitToApp","removeItem","Search","href","Input","HowToReg","positionOptions","enableHighAccuracy","showUserLocation","showAccuracyCircle","right","bottom","margin","marginRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b68bb9.chunk.js","sourcesContent":["import { Cancel, Room } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useRef, useState } from \"react\";\nimport \"./register.css\";\n\nexport default function Register({ setShowRegister }) {\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newUser = {\n      username: usernameRef.current.value,\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    };\n\n    try {\n      await axios.post(\"/users/register\", newUser);\n      setError(false);\n      setSuccess(true);\n    } catch (err) {\n      setError(true);\n    }\n  };\n  return (\n    <div className=\"registerContainer\">\n      <div className=\"logo\">\n        <Room className=\"logoIcon\" />\n        <span>MTL Register</span>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input autoFocus placeholder=\"username\" ref={usernameRef} />\n        <input type=\"email\" placeholder=\"email\" ref={emailRef} />\n        <input\n          type=\"password\"\n          min=\"6\"\n          placeholder=\"password\"\n          ref={passwordRef}\n        />\n        <button className=\"registerBtn\" type=\"submit\">\n          Register\n        </button>\n        {success && (\n          <span className=\"success\">Successfull. You can login now</span>\n        )}\n        {error && <span className=\"failure\"><b>Please enter valid credentials</b></span>}\n      </form>\n      <Cancel\n        className=\"registerCancel\"\n        onClick={() => setShowRegister(false)}\n      />\n    </div>\n  );\n}\n","import { Cancel, Room } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useRef, useState } from \"react\";\nimport \"./login.css\";\n\nexport default function Login({ setShowLogin, setCurrentUsername,myStorage }) {\n  const [error, setError] = useState(false);\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const user = {\n      username: usernameRef.current.value,\n      password: passwordRef.current.value,\n    };\n    try {\n      const res = await axios.post(\"/users/login\", user);\n      setCurrentUsername(res.data.username);\n      myStorage.setItem('user', res.data.username);\n      setShowLogin(false)\n    } catch (err) {\n      setError(true);\n    }\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <div className=\"logo\">\n        <Room className=\"logoIcon\" />\n        <span>MTL Login</span>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input autoFocus placeholder=\"username\" ref={usernameRef} />\n        <input\n          type=\"password\"\n          min=\"6\"\n          placeholder=\"password\"\n          ref={passwordRef}\n        />\n        <button className=\"loginBtn\" type=\"submit\" >\n          Login\n        </button>\n        {error && <span className=\"failure\"><b>Invalid User Credentials<br/>*Try Again*</b></span>}\n      </form>\n      <Cancel className=\"loginCancel\" onClick={() => setShowLogin(false)} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nconst CommentForm = ({\n  handleSubmit,\n  submitLabel,\n  hasCancelButton = false,\n  handleCancel,\n  initialText = \"\",\n}) => {\n  const [text, setText] = useState(initialText);\n  const isTextareaDisabled = text.length === 0;\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit(text);\n    setText(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"comment-form\">\n      <textarea\n        className=\"comment-form-textarea\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <div className=\"but\">\n      <button className=\"comment-form-button\" disabled={isTextareaDisabled}>\n        {submitLabel}\n      </button>\n      </div>\n      {hasCancelButton && (\n        <button\n          type=\"button\"\n          className=\"comment-form-button comment-form-cancel-button\"\n          onClick={handleCancel}\n        >\n          Cancel\n        </button>\n      )}\n    </form>\n  );\n};\n\nexport default CommentForm;\n","import CommentForm from \"./CommentForm\";\n\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  updateComment,\n  deleteComment,\n  addComment,\n  parentId = null,\n  currentUserId,\n}) => {\n  const isEditing =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"editing\";\n  const isReplying =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"replying\";\n  const fiveMinutes = 300000;\n  const timePassed = new Date() - new Date(comment.createdAt) > fiveMinutes;\n  const canDelete =\n    currentUserId === comment.userId && replies.length === 0 && !timePassed;\n  // const canReply = Boolean(currentUserId);\n  // const canEdit = currentUserId === comment.userId && !timePassed;\n  const replyId = parentId ? parentId : comment.id;\n  const createdAt = new Date(comment.createdAt).toLocaleDateString();\n  return (\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-image-container\">\n        {/* <img src=\"/user-icon.png\" /> */}\n      </div>\n      <div className=\"comment-right-part\">\n        <div className=\"comment-content\">\n          <div className=\"comment-author\">{comment.username}</div>\n          <div>{createdAt}</div>\n        </div>\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n        {isEditing && (\n          <CommentForm\n            submitLabel=\"Update\"\n            hasCancelButton\n            initialText={comment.body}\n            handleSubmit={(text) => updateComment(text, comment.id)}\n            handleCancel={() => {\n              setActiveComment(null);\n            }}\n          />\n        )}\n        <div className=\"comment-actions\">\n          {/* {canReply && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"replying\" })\n              }\n            >\n              Reply\n            </div>\n          )} */}\n          {/* {canEdit && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"editing\" })\n              }\n            >\n              Edit\n            </div>\n          )} */}\n          {canDelete && (\n            <div\n              className=\"comment-action\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              Delete\n            </div>\n          )}\n        </div>\n        {isReplying && (\n          <CommentForm\n            submitLabel=\"Reply\"\n            handleSubmit={(text) => addComment(text, replyId)}\n          />\n        )}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                updateComment={updateComment}\n                deleteComment={deleteComment}\n                addComment={addComment}\n                parentId={comment.id}\n                replies={[]}\n                currentUserId={currentUserId}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","export const getComments = async () => {\n  return [\n    {\n      id: \"1\",\n      body: \"First comment\",\n      username: \"raki\",\n      userId: \"1\",\n      parentId: null,\n      createdAt: \"2022-06-16T23:00:33.010+02:00\",\n    },\n    {\n      id: \"2\",\n      body: \"Second comment\",\n      username: \"param\",\n      userId: \"2\",\n      parentId: null,\n      createdAt: \"2022-06-16T23:00:33.010+02:00\",\n    },\n    // {\n    //   id: \"3\",\n    //   body: \"Replying to First comment\",\n    //   username: \"param\",\n    //   userId: \"2\",\n    //   parentId: \"1\",\n    //   createdAt: \"2022-06-16T23:00:33.010+02:00\",\n    // },\n    // {\n    //   id: \"4\",\n    //   body: \"Replying to Second comment\",\n    //   username: \"raki\",\n    //   userId: \"2\",\n    //   parentId: \"2\",\n    //   createdAt: \"2022-06-16T23:00:33.010+02:00\",\n    // },\n    \n  ];\n};\n\nexport const createComment = async (text, parentId = null) => {\n  return {\n    id: Math.random().toString(36).substr(2, 9),\n    body: text,\n    parentId,\n    userId: \"1\",\n    username: \"raki\",\n    createdAt: new Date().toISOString(),\n  };\n};\n\nexport const updateComment = async (text) => {\n  return { text };\n};\n\nexport const deleteComment = async () => {\n  return {};\n};\n","import { useState, useEffect } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport {\n  getComments as getCommentsApi,\n  createComment as createCommentApi,\n  updateComment as updateCommentApi,\n  deleteComment as deleteCommentApi,\n} from \"../api\";\n\nconst Comments = ({ commentsUrl, currentUserId }) => {\n  const [backendComments, setBackendComments] = useState([]);\n  const [activeComment, setActiveComment] = useState(null);\n  const rootComments = backendComments.filter(\n    (backendComment) => backendComment.parentId === null\n  );\n  const getReplies = (commentId) =>\n    backendComments\n      .filter((backendComment) => backendComment.parentId === commentId)\n      .sort(\n        (a, b) =>\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n      );\n  const addComment = (text, parentId) => {\n    createCommentApi(text, parentId).then((comment) => {\n      setBackendComments([comment, ...backendComments]);\n      setActiveComment(null);\n    });\n  };\n\n  const updateComment = (text, commentId) => {\n    updateCommentApi(text).then(() => {\n      const updatedBackendComments = backendComments.map((backendComment) => {\n        if (backendComment.id === commentId) {\n          return { ...backendComment, body: text };\n        }\n        return backendComment;\n      });\n      setBackendComments(updatedBackendComments);\n      setActiveComment(null);\n    });\n  };\n  const deleteComment = (commentId) => {\n      deleteCommentApi().then(() => {\n        const updatedBackendComments = backendComments.filter(\n          (backendComment) => backendComment.id !== commentId\n        );\n        setBackendComments(updatedBackendComments);\n      });\n  };\n\n  useEffect(() => {\n    getCommentsApi().then((data) => {\n      setBackendComments(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"comments\">\n      <div className=\"comment-scroll\">\n      <CommentForm submitLabel=\"Send\" handleSubmit={addComment} />\n      <div className=\"comments-container\">\n        {rootComments.map((rootComment) => (\n          <Comment\n          key={rootComment.id}\n            comment={rootComment}\n            replies={getReplies(rootComment.id)}\n            activeComment={activeComment}\n            setActiveComment={setActiveComment}\n            addComment={addComment}\n            deleteComment={deleteComment}\n            updateComment={updateComment}\n            currentUserId={currentUserId}\n          />\n        ))}\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n","import \"./app.css\";\nimport ReactMapGL, { GeolocateControl,Marker, Popup } from \"react-map-gl\";\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { Room, Star, Delete, ExitToApp, Search, HowToReg, Input, Favorite} from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Geocoder from \"react-map-gl-geocoder\";\n// import {useNavigate} from 'react-router-dom'\nimport Comments from \"./comments/Comments\";\nimport \"./index.css\"\n\nfunction App() {\n  const myStorage = window.localStorage;\n  const [currentUsername, setCurrentUsername] = useState(myStorage.getItem(\"user\"));\n  const [pins, setPins] = useState([]);\n  const [currentPlaceId, setCurrentPlaceId] = useState(null);\n  const [newPlace, setNewPlace] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [desc, setDesc] = useState(null);\n  const [star, setStar] = useState(1);\n  const [visitDate, setVisitDate] = useState(null);\n  // const [data, setData] = useState();\n  // const [state,dispatch] = useContext(UserContext);\n  const [viewport, setViewport] = useState({\n    latitude: 12.9354553,\n    longitude: 77.5348926,\n    zoom: 8,\n  });\n  const [showRegister, setShowRegister] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  const handleMarkerClick = (id, lat, long) => {\n    setCurrentPlaceId(id);\n    setViewport({ ...viewport, latitude: lat, longitude: long });\n  };\n\n\n// const makeComment = (text,postid)=>{\n//     fetch('/',{\n//         method:\"put\",\n//         headers:{\n//             \"Content-Type\":\"application/json\",\n//             \"Authorization\":\"Bearer \"+localStorage.getItem()  \n//  }\n//     }).then(res=>res.json())\n//     .then(result=>{\n//         console.log(result)\n//         const newData = data.map(p=>{\n//           if(p._id===result._id){\n//               return result\n//           }else{\n//               return p\n//           }\n//        })\n//       setData(newData)\n//     }).catch(err=>{\n//         console.log(err)\n//     })\n// }\n\n  // const navigate = useNavigate();\n\n  const deletePin = (id,pin)=>{\n    fetch(`/pins/${id}`,{\n        method:\"delete\",\n    }).then(async res=>res)\n    .then(result=>{\n        // console.log(result)\n        setCurrentPlaceId(null)\n    })\n}\n\n  const handleAddClick = (e) => {\n    const [longitude, latitude] = e.lngLat;\n    setNewPlace({\n      lat: latitude,\n      long: longitude,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newPin = {\n      username: currentUsername,\n      title,\n      desc,\n      rating: star,\n      lat: newPlace.lat,\n      long: newPlace.long,\n      visitDate,\n    };\n\n    try {\n      const res = await axios.post(\"/pins\", newPin);\n      setPins([...pins, res.data]);\n      setNewPlace(null);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const getPins = async () => {\n      try {\n        const allPins = await axios.get(\"/pins\");\n        setPins(allPins.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getPins();\n  }, []);\n\n  const handleLogout = () => {\n    setCurrentUsername(null);\n    myStorage.removeItem(\"user\");\n  };\n\n    const mapRef = useRef();\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n\n  const handleGeocoderViewportChange = useCallback(\n        (newViewport) => {\n          const geocoderDefaultOverrides = { transitionDuration: 1000 };\n    \n          return handleViewportChange({\n            ...newViewport,\n            ...geocoderDefaultOverrides\n          });\n        },\n        [handleViewportChange]\n      );\n\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100wh\" }}>\n      <ReactMapGL\n        ref={mapRef}\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\n        width=\"100%\"\n        height=\"100%\"\n        transitionDuration=\"100\"\n        // mapStyle=\"mapbox://styles/rakesh-k-s/cl3erq2dl006p14thtfgxh4gf\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        // mapStyle='mapbox://styles/mapbox/satellite-v9'\n        onViewportChange={(viewport) => setViewport(viewport)}\n        onDblClick={currentUsername && handleAddClick}\n      >\n        {pins.map((p) => (\n          <>\n            <Marker\n              latitude={p.lat}\n              longitude={p.long}\n              offsetLeft={-3 * viewport.zoom}\n              offsetTop={-6 * viewport.zoom}\n            >\n              <Room\n                style={{\n                  fontSize: 6 * viewport.zoom,\n                  color:\n                    currentUsername === p.username ? \"tomato\" : \"slateblue\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\n              />\n            </Marker>\n            {p._id === currentPlaceId && (\n              <Popup\n                key={p._id}\n                latitude={p.lat}\n                longitude={p.long}\n                closeButton={true}\n                closeOnClick={false}\n                onClose={() => setCurrentPlaceId(null)}\n                anchor=\"left\"\n                className=\"popup\"\n              >\n                <div className=\"card\" >\n                  <label>Place</label>\n                  <h4 className=\"place\">{p.title}</h4>\n                  <label>Review</label>\n                  <p className=\"desc\">{p.desc}</p>\n                  <label>Rating</label>\n                  <div className=\"stars\">\n                    {Array(p.rating).fill(<Star className=\"star\" />)}\n                  </div>\n                  <label>Tour-Date</label>\n                  <p className=\"visitDate\">{p.visitDate.slice(0,10)}</p>\n                  <label>Information</label>\n                  <span className=\"username\">\n                    Created by <b>{p.username}</b>\n                  </span>\n                  <span className=\"date\">{format(p.createdAt)}</span>\n                  {/* <label>Comments</label> */}\n                  <Comments\n                    currentUserId=\"1\"\n                    />\n                    <div className=\"like\">\n                {/* {\n                  p.comments.map(record=>{\n                      return(\n                      <h6  key={record._id}><span   style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                      )\n                  })\n              }\n \n              <form onSubmit={(e)=>{\n                  e.preventDefault()\n                  makeComment(e.target[0].value,p._id)\n              }} className>\n                <input type=\"text\" placeholder=\"add a comment\"  />  \n              </form> */}\n                    {/* <Favorite /> */}\n                  <Delete className=\"delete\" style={{\n                    // color:\n                    // currentUsername === p.username ? \"tomato\" : \"white\",\n                    cursor: \"pointer\",\n                    marginBottom:\"-10px\",\n                    visibility:\n                    currentUsername === p.username ? \"visible\" : \"hidden\",\n                  }}\n                  onClick={() => deletePin(p._id,p.lat, p.long)}\n                  />\n                  </div>\n                </div>\n              </Popup>\n            )}\n          </>\n        ))}\n        {newPlace && (\n          <>\n            <Marker\n              latitude={newPlace.lat}\n              longitude={newPlace.long}\n              offsetLeft={-3 * viewport.zoom}\n              offsetTop={-6 * viewport.zoom}\n            >\n              <Room\n                style={{\n                  fontSize: 6 * viewport.zoom,\n                  color: \"tomato\",\n                  cursor: \"pointer\",\n                }}\n              />\n            </Marker>\n            <Popup\n              latitude={newPlace.lat}\n              longitude={newPlace.long}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={() => setNewPlace(null)}\n              anchor=\"left\"\n            >\n              <div>\n                <form onSubmit={handleSubmit}>\n                  <label>Title</label>\n                  <input\n                    placeholder=\"Enter a title\"\n                    autoFocus\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                  <label>Description</label>\n                  <textarea className=\"desc\"\n                    placeholder=\"Say us something about this place.\"\n                    onChange={(e) => setDesc(e.target.value)}\n                  />\n                  <label>Rating</label>\n                  <select onChange={(e) => setStar(e.target.value)}>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                  </select>\n                  <label>Tour-Date</label>\n                  <input className=\"visitDate\" type=\"date\" onChange={(e) => setVisitDate(e.target.value)}/>\n                  <button type=\"submit\" className=\"submitButton\">\n                    Add Pin\n                  </button>\n                </form>\n              </div>\n            </Popup>\n          </>\n        )}\n        <div className=\"head\" style={{ height: \"10vh\", width: \"100wh\",position:'relative', backgroundColor:\"dodgerblue\" }}>\n        <h1 className=\"title\">My Travel Log</h1>\n        \n        {currentUsername ? (\n         <> <div className=\"icon\">\n           <ExitToApp style={{ fontSize: 20 }} />\n         <button className=\"button logout\" onClick={handleLogout}>\n            SignOut \n          </button>\n          </div>\n          <div className=\"logos\">\n          <Search style={{ fontSize: 20 }} />\n          <a href=\"http://localhost:3005/\" className=\"button search\">Search places</a>\n          </div>\n          </>\n        ) : (\n          <div className=\"buttons\">\n            <button className=\"button login\" onClick={() => setShowLogin(true)}>\n              <Input style={{ fontSize: 20 }}/>\n              SignIn\n            </button>\n            <button\n              className=\"button register\"\n              onClick={() => setShowRegister(true)}\n              ><HowToReg style={{ fontSize: 20 }}/>\n              SignUp\n            </button>\n          </div>\n        )}\n        {showRegister && <Register setShowRegister={setShowRegister} />}\n        {showLogin && (\n          <Login\n          setShowLogin={setShowLogin}\n          setCurrentUsername={setCurrentUsername}\n          myStorage={myStorage}\n          />\n          )}\n          </div>\n          <Geocoder\n          mapRef={mapRef}\n          onViewportChange={handleGeocoderViewportChange}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\n          position=\"top-right\"\n          />\n           <GeolocateControl\n            positionOptions={{ enableHighAccuracy: true }}\n            showUserLocation={true}\n            showAccuracyCircle={false}\n            style={{\n              position: \"fixed\",\n              right: 0,\n              bottom: 15,\n              margin: 10,\n              // marginBotton: 360,\n              marginRight: 8,\n            }} \n          />\n      </ReactMapGL>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n// import \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\n// import React, { useState, useRef, useCallback } from \"react\";\n// import { render } from \"react-dom\";\n// import MapGL from \"react-map-gl\";\n// import Geocoder from \"react-map-gl-geocoder\";\n\n// // Please be a decent human and don't abuse my Mapbox API token.\n// // If you fork this sandbox, replace my API token with your own.\n// // Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\n\n\n// const App = () => {\n//   const [viewport, setViewport] = useState({\n//     latitude: 37.7577,\n//     longitude: -122.4376,\n//     zoom: 8\n//   });\n//   const mapRef = useRef();\n//   const handleViewportChange = useCallback(\n//     (newViewport) => setViewport(newViewport),\n//     []\n//   );\n\n//   // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n//   const handleGeocoderViewportChange = useCallback(\n//     (newViewport) => {\n//       const geocoderDefaultOverrides = { transitionDuration: 1000 };\n\n//       return handleViewportChange({\n//         ...newViewport,\n//         ...geocoderDefaultOverrides\n//       });\n//     },\n//     [handleViewportChange]\n//   );\n\n//   return (\n//     <div style={{ height: \"100vh\" }}>\n//       <MapGL\n//         ref={mapRef}\n//         {...viewport}\n//         width=\"100%\"\n//         height=\"100%\"\n//         onViewportChange={handleViewportChange}\n//         mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\n//       >\n//         <Geocoder\n//           mapRef={mapRef}\n//           onViewportChange={handleGeocoderViewportChange}\n//           mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\n//           position=\"top-left\"\n//         />\n//       </MapGL>\n//     </div>\n//   );\n// };\n\n// render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}